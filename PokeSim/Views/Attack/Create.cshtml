@model PokeSim.Models.Attack

@{
    string displayItem = "Attack";

    ViewBag.Title = "Create New " + displayItem;

    string message = ViewBag.Message;
    PokeSim.Models.Attack currentItem = ViewBag.CurrentItem;
    Dictionary<int, string> categories = ViewBag.Categories;
    Dictionary<int, string> attackMethods = ViewBag.AttackMethods;
    Dictionary<int, string> elementalTypes = ViewBag.ElementalTypes;
    Dictionary<int, string> targets = ViewBag.Targets;
    string selected = " selected=\"selected\"";
    //EnumHelpers.ACCURACY_NEVER_MISS;
}

<h2>@ViewBag.Title</h2>

<p style="color:red">@message</p>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ElementalTypeID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select class="form-control" id="ElementalTypeID" name="ElementalTypeID">
                    @{
                        selected = " selected=\"selected\"";
                        foreach (KeyValuePair<int, string> i in elementalTypes)
                        {
                            <option value="@i.Key"@selected>@i.Value</option>
                            selected = "";
                        }
                    }
                </select>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select class="form-control" id="Category" name="Category">
                    @{
                        selected = " selected=\"selected\"";
                        foreach (KeyValuePair<int, string> i in categories)
                        {
                            <option value="@i.Key" @selected>@i.Value</option>
                            selected = "";
                        }
                    }
                </select>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AttackMethodID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select class="form-control" id="AttackMethodID" name="AttackMethodID">
                    @{
                        selected = " selected=\"selected\"";
                        foreach (KeyValuePair<int, string> i in attackMethods)
                        {
                            <option value="@i.Key" @selected>@i.Value</option>
                            selected = "";
                        }
                    }
                </select>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MaxPP, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MaxPP, new { htmlAttributes = new { @class = "form-control", @Value = 1} })
                @Html.ValidationMessageFor(model => model.MaxPP, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Power, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Power, new { htmlAttributes = new { @class = "form-control", @Value = 0 } })
                @Html.ValidationMessageFor(model => model.Power, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Priority, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Priority, new { htmlAttributes = new { @class = "form-control", @Value = 0 } })
                @Html.ValidationMessageFor(model => model.Priority, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Target, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select class="form-control" id="Target" name="Target">
                    @{
                        selected = " selected=\"selected\"";
                        foreach (KeyValuePair<int, string> i in targets)
                        {
                            <option value="@i.Key" @selected>@i.Value</option>
                            selected = "";
                        }
                    }
                </select>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Accuracy, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select class="form-control" id="Accuracy" name="Accuracy">
                    @{
                        selected = " selected=\"selected\"";
                        for (int i = 0; i < 101; i += 5)
                        {
                            <option value="@i" @selected>@i%</option>
                            selected = "";
                        }
                    }
                    <option value="@EnumHelpers.ACCURACY_NEVER_MISS">Never Miss</option>
                </select>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<p>
    @Html.ActionLink(displayItem + " Index", "Index") |
    @Html.ActionLink(displayItem + " Overview", "Overview")
</p>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
